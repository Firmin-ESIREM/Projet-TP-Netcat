#!/bin/bash

if [ $# -ne 2 ] && [ $# -ne 3 ]
then
  >&2 echo "Usage: ./find_best.sh [keyfile] [host_to_connect] [port_to_connect (defaults to 12345)]"
  exit 1
fi

port_to_connect=""

if [ $# -eq 2 ]
then
  port_to_connect="12345"
else
  port_to_connect="$3"
fi

code=$(cat "$1")
code_upper=$(echo $code | tr "a-z" "A-Z")
code_lower=$(echo $code | tr "A-Z" "a-z")
code="$code_upper$code_lower"

function crypt(){
    exit=$(echo "$1" | tr "A-Za-z" "$code")
    echo $exit
}

function decrypt(){
  exit=$(echo "$1" | tr "Â¶" "\n" | tr "$code" "A-Za-z")
  echo -n "$exit"
}

input_fifo="./ssn-input"
output_fifo="./ssn-output"
rm -f "$input_fifo"
rm -f "$output_fifo"


mkfifo "$output_fifo"

mkfifo "$input_fifo"
cat > "$input_fifo" &
pid=$!

tail -f "$input_fifo" | nc "$2" "$port_to_connect" > $output_fifo &


while true
do
  read -d "EOF" line < $output_fifo
  line_decrypt=$(decrypt "$line" 2>&1 | tee "/dev/tty")
  if [[ "$line_decrypt" == *"Please enter your password:"* ]] || [[ "$line_decrypt" == *"The password is incorrect. Please enter your password:"* ]]
  then
    read -s line_in
    echo $line_in > $input_fifo
  elif [[ "$line_decrypt" == *"The password is correct. Waiting for encryption key..."* ]]
  then
    echo "$code_upper" > $input_fifo
  elif [[ "$line_decrypt" == *"\$" ]]
  then
    echo -n " "
    read line_in
    crypt "$line_in" > $input_fifo

  fi
done
