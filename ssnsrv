#!/bin/bash

if [ $# -ne 2 ] && [ $# -ne 3 ]
then
  >&2 echo "Usage: ./ssnsrv [keyfile] [password_file] [port_to_listen (defaults to 12345)]"
  exit 1
fi

port_to_listen=""

if [ $# -eq 2 ]
then
  port_to_listen="12345"
else
  port_to_listen="$3"
fi

rm -f ./fifo
mkfifo ./fifo
rm -f ./cmd_output
hname="$(hostname -s)"

priv_key="$(cat "$1")"
code_upper="$(echo "$priv_key" | tr "a-z" "A-Z")"
code_lower="$(echo "$priv_key" | tr "A-Z" "a-z")"
code="$code_upper$code_lower"
pwd_file="$(cat "$2")"

function hash_password () {
  local pwd_hash_full="$(echo "$1" | sha256sum)"
  local pwd_hash="$(echo "$pwd_hash_full" | rev | cut -c3- | rev)"
  echo "$pwd_hash"
}

function decrypt() {
    echo "$1" | tr "$code" "A-Za-z"
}

function crypt() {
  if [ "$2" == "-n" ]
  then
    encrypted=$(echo "$1" | tr "A-Za-z" "$code")
    echo "$encrypted EOF"
  else
    encrypted=$(echo "$1" | tr "A-Za-z" "$code")
    echo "${encrypted}¶"
  fi
}

function interpret () {
  current_date=$(LANG=en_us_88591; date)

  crypt "$current_date"
  crypt "Welcome to $hname!"
  crypt "Please enter your password: " -n

  success="0"

  while read line
  do
    if [ $success == "1" ]
    then
      if [ "$(echo "$line" | tr "a-z" "A-Z")" == "$code_upper" ]
      then
        success="3"
      else
        success="2"
      fi
    else
      for text_line in $pwd_file
      do
        pwd_hash="$(hash_password "$line")"
        echo -n "$text_line" > 1
        echo -n "$pwd_hash" > 2
        if [[ "$text_line " == "$pwd_hash" ]]
        then
          success="1"
          break
        else
          success="0"
        fi
      done
    fi
    if [ $success == "1" ]
    then
      crypt "The password is correct. Waiting for encryption key..." -n
    elif [ $success == "2" ]
    then
      crypt "Wrong encryption key."
      exit
    elif [ $success == "3" ]
    then
      crypt "Encryption key received ! You are now connected."
      crypt "When your session is over, please disconnect properly, with \"exit\" or \"logout\", if you want to be able to reconnect again."
      break
    else
      crypt "The password is incorrect. Please enter your password: " -n
    fi
  done


  crypt "$USER@$hname $PWD \$ " -n
  logout_cmd="$(crypt "logout")"
  exit_cmd="$(crypt "exit_cmd")"
  while read line_enc
  do
    if [ "$line_enc¶" == "$logout_cmd" ] || [ "$line_enc¶" == "$exit_cmd" ]
    then
      exit
    fi
    $(decrypt "$line_enc") &> cmd_output
    crypt "$(< cmd_output)"
    rm -f ./cmd_output &> /dev/null
    crypt "$USER@$hname $PWD \$" -n
  done
}

echo "[LOG] Server starting on port $port_to_listen..."
while true
do
  nc -l "$port_to_listen" < ./fifo | interpret &> ./fifo
done
echo "[LOG] Server ending..."
